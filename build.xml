<?xml version="1.0" encoding="utf-8" ?> 
<project name="Imebra" default="build_all" basedir=".">

        <!-- This is an ant build file" -->

	<!-- Build all -->
	<target name="build_all" depends="ZIP_GPL" >
	</target>

	<!-- Make a zip file and a gzip file of the GPL build -->
	<target name="ZIP_GPL" depends="make_distribution" description ="Compress the build">
		<zip basedir="${build_dir}/distribution" destfile="${builds}/imebra_${fileVersion}.zip" />
	</target>

	<!-- Make the GPL build -->
	<target name="make_distribution" depends="run_test_cases, HTML, PDF, zip_dicomdirItems, zip_dicom2jpeg">
		<property name="distribution" value="${build_dir}/distribution" />
		<property name="librarySource" value="${distribution}/library" />
		<property name="documentation" value="${distribution}/documentation" />

		<copy todir="${librarySource}/base">
			<fileset dir="${build_dir}/base" />
		</copy>
		<copy todir="${librarySource}/imebra">
			<fileset dir="${build_dir}/imebra" />
		</copy>
		<copy file="${build_dir}/generated_doc/latex/refman.pdf" tofile="${documentation}/pdf/imebra.pdf" />
		<copy todir="${documentation}/html">
			<fileset dir="${build_dir}/generated_doc/html" />
		</copy>
		<delete dir="${build_dir}/examples/dicom2jpeg/build" failonerror="true" /> 
		<delete dir="${build_dir}/examples/dicom2jpeg/dist" failonerror="true" /> 
		<delete dir="${build_dir}/examples/dicomdirItems/build" failonerror="true" /> 
		<delete dir="${build_dir}/examples/dicomdirItems/dist" failonerror="true" /> 
		<copy todir="${librarySource}/examples">
			<fileset dir="${build_dir}/examples" />
		</copy>
		<copy file="${build_dir}/docs/bsd.txt" tofile="${distribution}/license.txt" />
	</target>

	<!-- Zip dicomdirItems -->
	<target name="zip_dicomdirItems" depends="build_dicomdirItems" >
		<zip basedir="${build_dir}/examples/dicomdirItems/dist/Release_32/GNU-Linux-x86" destfile="${builds}/dicomdirItems_32bit_${fileVersion}.zip" />
		<zip basedir="${build_dir}/examples/dicomdirItems/dist/Release_64/GNU-Linux-x86" destfile="${builds}/dicomdirItems_64bit_${fileVersion}.zip" />
	</target>

	<!-- Zip dicom2jpeg -->
	<target name="zip_dicom2jpeg" depends="build_dicom2jpeg" >
		<zip basedir="${build_dir}/examples/dicom2jpeg/dist/Release_32/GNU-Linux-x86" destfile="${builds}/dicom2jpeg_32bit_${fileVersion}.zip" />
		<zip basedir="${build_dir}/examples/dicom2jpeg/dist/Release_64/GNU-Linux-x86" destfile="${builds}/dicom2jpeg_64bit_${fileVersion}.zip" />
	</target>

	<!-- Build the HTML documentation -->
	<target name="HTML" depends="run_test_cases" description="Build the HTML documents">
		<exec dir="${build_dir}" executable="doxygen" failonerror="true">
			<arg value="DoxyfileHTML"/>
		</exec>
		<copy todir="${build_dir_html_doc}">
			<fileset dir="${build_dir}/generated_doc/html" />
		</copy>
	</target>

	<!-- Build the PDF documentation -->

	<target name="PDF" depends="run_test_cases" description="Build the PDF document">
                <exec dir="${build_dir}" executable="doxygen" failonerror="true">
			<arg value="DoxyfilePDF"/>
		</exec>
		<exec dir="${build_dir}/generated_doc/latex" executable="pdflatex">
			<arg value="refman.tex"/>
		</exec>
		<exec dir="${build_dir}/generated_doc/latex" executable="makeindex">
			<arg value="refman.idx"/>
		</exec>
		<exec dir="${build_dir}/generated_doc/latex" executable="pdflatex">
			<arg value="refman.tex"/>
		</exec>
		<exec dir="${build_dir}/generated_doc/latex" executable="pdflatex">
			<arg value="refman.tex"/>
		</exec>
		<exec dir="${build_dir}/generated_doc/latex" executable="pdflatex">
			<arg value="refman.tex"/>
		</exec>
		<copy file="${build_dir}/generated_doc/latex/refman.pdf" tofile="${build_dir}/documentation/imebra.pdf" />

	</target>

	<!-- Build dicomdirItems -->
	<target name="build_dicomdirItems" depends="run_test_cases" description="Build the dicomdirItems">
            <exec executable="qmake" failonerror="true" dir="${build_dir_dicomdir_64}">
                    <arg path="${build_dir}/examples/dicomdirItems/dicomdiritems.pro"/>
                    <arg value="-r"/>
                    <arg value="CONFIG+=Release"/>
                    <arg value="-spec"/>
                    <arg value="linux-g++-64"/>
            </exec>
            <exec executable="make" failonerror="true" dir="${build_dir_dicomdir_64}" />
            <exec executable="qmake" failonerror="true" dir="${build_dir_dicomdir_32}">
                    <arg path="${build_dir}/examples/dicomdirItems/dicomdiritems.pro"/>
                    <arg value="-r"/>
                    <arg value="CONFIG+=Release"/>
                    <arg value="-spec"/>
                    <arg value="linux-g++-32"/>
            </exec>
            <exec executable="make" failonerror="true" dir="${build_dir_dicomdir_32}" />
        </target>

	<!-- Build dicom2jpeg -->
	<target name="build_dicom2jpeg" depends="run_test_cases" description="Build the dicom2jpeg">
            <exec executable="qmake" failonerror="true" dir="${build_dir_dicom2jpeg_64}">
                    <arg path="${build_dir}/examples/dicom2jpeg/dicom2jpeg.pro"/>
                    <arg value="-r"/>
                    <arg value="CONFIG+=Release"/>
                    <arg value="-spec"/>
                    <arg value="linux-g++-64"/>
            </exec>
            <exec executable="make" failonerror="true" dir="${build_dir_dicom2jpeg_64}" />
            <exec executable="qmake" failonerror="true" dir="${build_dir_dicom2jpeg_32}">
                    <arg path="${build_dir}/examples/dicom2jpeg/dicom2jpeg.pro"/>
                    <arg value="-r"/>
                    <arg value="CONFIG+=Release"/>
                    <arg value="-spec"/>
                    <arg value="linux-g++-32"/>
            </exec>
            <exec executable="make" failonerror="true" dir="${build_dir_dicom2jpeg_32}" />
        </target>

	<!-- Run the test cases posix -->
	<target name="run_test_cases" depends="build_test_cases" description="Run the test cases">
				<exec executable="${build_dir_tests}/tests" dir="${build_dir_tests}" resolveexecutable="true" failonerror="true" />
	</target>


	<!-- Build the test cases -->
        <target name="build_test_cases" depends="replace_version" description="Build the Imebra test cases">
				<exec executable="qmake" failonerror="true" dir="${build_dir_tests}">
                        <arg path="${build_dir}/tests/tests.pro"/>
						<arg value="-r"/>
						<arg value="CONFIG+=Release"/>
				</exec>
				<exec executable="make" failonerror="true" dir="${build_dir_tests}" />
		</target>

	<!-- Replace the version number and license info -->
	<target name="replace_version" depends="create_build_dir">
		<replace file="${build_dir}/DoxyfileCHM" token="1.0.0.1" value='"${fullVersionReadable}"'/>
		<replace file="${build_dir}/DoxyfileHTML" token="1.0.0.1" value='"${fullVersionReadable}"'/>
		<replace file="${build_dir}/DoxyfilePDF" token="1.0.0.1" value='"${fullVersionReadable}"'/>
		<replace file="${build_dir}/DoxyfilePDFH" token="1.0.0.1" value='"${fullVersionReadable}"'/>
		<replace dir="${build_dir}" includes="*.rc,*.h,*.cpp" token="1.0.0.1" value="${fullVersionReadable}" />
		<replace dir="${build_dir}" includes="*.rc,*.h,*.cpp" token="&quot;1.0.0.1&quot;" value="&quot;${fullVersionReadable}&quot;" />
		<replace dir="${build_dir}" includes="*.rc,*.h,*.cpp" token="L&quot;1.0.0.1&quot;" value="L&quot;${fullVersionReadable}&quot;" />
		<replace dir="${build_dir}" token="$fileHeader$">
			<replacevalue><![CDATA[
$imebraVersion$

Imebra: a C++ dicom library.
Copyright (c) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010 by Paolo Brandoli
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
- Redistributions of source code must retain the above copyright
  notice, this list of conditions and the following disclaimer.
- Redistributions in binary form must reproduce the above copyright
  notice, this list of conditions and the following disclaimer in the
  documentation and/or other materials provided with the distribution.
- Neither the name of the <organization> nor the
  names of its contributors may be used to endorse or promote products
  derived from this software without specific prior written permission.
.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Imebra is available at http://imebra.com

The author can be contacted by email at paolo@puntoexe.com

]]></replacevalue>
		</replace>
		<replace dir="${build_dir}" token="$imebraVersion$" value="Imebra v. ${fullVersionReadable}" />
	</target>

	<!-- Create the directory for the final build -->
	<target name="create_build_dir" depends="version" description="Create the directory for the final build">
		<property name="builds" value="../builds/imebra_${fileVersion}" />
		<delete dir="${builds}" failonerror="false" /> 
		<mkdir dir="${builds}" />
		<property name="build_dir" value="${builds}/temp_build" />
		<mkdir dir="${build_dir}" />
                <property name="build_dir_applications" value="${build_dir}/applications" />
                <mkdir dir="${build_dir_applications}" />
		<property name="build_dir_tests" value="${build_dir_applications}/tests" />
		<mkdir dir="${build_dir_tests}" />
		<property name="build_dir_dicom2jpeg_64" value="${build_dir_applications}/dicom2jpeg_64" />
                <mkdir dir="${build_dir_dicom2jpeg_64}" />
                <property name="build_dir_dicom2jpeg_32" value="${build_dir_applications}/dicom2jpeg_32" />
                <mkdir dir="${build_dir_dicom2jpeg_32}" />
                <property name="build_dir_dicomdir_64" value="${build_dir_applications}/dicomdir_64" />
                <mkdir dir="${build_dir_dicomdir_64}" />
                <property name="build_dir_dicomdir_32" value="${build_dir_applications}/dicomdir_32" />
                <mkdir dir="${build_dir_dicomdir_32}" />
                <property name="build_dir_html_doc" value="${builds}/imebra_${fileVersion}_html_doc" />
		<mkdir dir="${build_dir_html_doc}" />
		<copy todir="${build_dir}">
			 <fileset dir="project_files"/>
		</copy>
                <property name="build_dir_html_doc" value="${builds}/imebra_${fileVersion}_html_doc" />
                <mkdir dir="${build_dir_html_doc}" />
        </target>

	<!-- Initialize the version number -->
	<target name="version" description="Initialize the build number">
		<property file="./build.number" /> 
		<property name="fileVersion" value="0_0_${build.number}"/>
		<property name="fullVersionReadable" value="0.0.${build.number}"/>
		<property name="productName" value="Imebra ${fullVersionReadable}"/>
	</target>


</project>
